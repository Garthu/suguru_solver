-- Suguru Solver using Haskell

regiao5 = [[(0,0),(0,1),(1,0),(1,1),(1,2)],
			[(0,2),(0,3),(0,4),(1,4)],
			[(1,3),(2,2),(2,3),(2,4),(3,3)],
			[(3,0),(4,0),(4,1)],
			[(2,0),(2,1),(3,1),(3,2),(4,2)],
			[(3,4),(4,3),(4,4)]]


regiao6 = [[(0,0),(0,1),(1,0),(2,0)],
			[(0,2),(1,1),(1,2),(1,3),(2,2)],
			[(0,3),(0,4),(0,5),(1,4),(1,5)],
			[(2,1),(3,0),(3,1),(3,2),(4,1)],
			[(2,3),(2,4),(2,5),(3,3),(3,4)],
			[(4,2),(4,3)],
			[(4,0),(5,0),(5,1),(5,2),(5,3)],
			[(3,5),(4,4),(4,5),(5,4),(5,5)]]

regiao7 = [[(0,0),(1,0)],
			[(0,1),(1,1),(1,2),(2,1)],
			[(0,2),(0,3),(0,4),(0,5),(1,3)],
			[(0,6),(1,5),(1,6),(2,6),(3,6)],
			[(2,0),(3,0),(3,1),(4,0),(4,1)],
			[(2,2),(3,2),(3,3),(4,2)],
			[(1,4),(2,3),(2,4),(2,5),(3,4)],
			[(5,0),(5,1),(6,0),(6,1),(6,2)],
			[(4,3),(5,2),(5,3),(5,4),(6,3)],
			[(3,5),(4,4),(4,5),(4,6),(5,5)],
			[(5,6),(6,4),(6,5),(6,6)]]

--Procura na matriz uma coordenada valida para inserir 

find_valid :: [[Int]] -> (Int,Int)
find_valid (a:b) = 

--Verifica se Ã© valido o chute

is_valid :: [[Int]] -> Int -> Int -> Int -> Bool
is_valid (a:b) = 

-- Resolve o Suguro, retornando o problema resolvido

solver_suguru :: [[Int]] -> [[Int]]
solver_suguru (a:b) = 



main = do
    matrix = [[5, 0, 0, 0, 0],
			[0, 0, 0, 0, 0],
		  	[0, 2, 3, 2, 0],
		  	[0, 0, 0, 0, 0],
		  	[0, 1, 0, 0, 1]]
    
    print(matrix)
    
